---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=<THEMOVIEDB_API_KEY>&query=The%20Dark%20Knight
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.7.11
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Mon, 23 Oct 2023 20:15:50 GMT
      Server:
      - openresty
      Cache-Control:
      - public, max-age=25283
      X-Memc:
      - HIT
      X-Memc-Key:
      - 85f008d84bd4b330517d09695b99310e
      X-Memc-Age:
      - '5482'
      X-Memc-Expires:
      - '18041'
      Etag:
      - W/"45e89f80ef046031b97accbaaf6e879f"
      Vary:
      - Accept-Encoding
      - Origin
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 b8fa286a637a91a7f38c0cbf622153e6.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - SFO53-P4
      Alt-Svc:
      - h3=":443"; ma=86400
      X-Amz-Cf-Id:
      - tL3MkKTk4Aynvk-L_CkxWPgSs0i792OxNTILx9GVeSagz3rmnQmJyw==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Mon, 23 Oct 2023 20:15:50 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=<THEMOVIEDB_API_KEY>&query=The%20Dark%20Knight
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.7.11
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Mon, 23 Oct 2023 20:15:50 GMT
      Server:
      - openresty
      Cache-Control:
      - public, max-age=25283
      X-Memc:
      - HIT
      X-Memc-Key:
      - 85f008d84bd4b330517d09695b99310e
      X-Memc-Age:
      - '5482'
      X-Memc-Expires:
      - '18041'
      Etag:
      - W/"45e89f80ef046031b97accbaaf6e879f"
      Vary:
      - Accept-Encoding
      - Origin
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 594aa5e4a6030c26c04a6a841838abb2.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - SFO53-P4
      Alt-Svc:
      - h3=":443"; ma=86400
      X-Amz-Cf-Id:
      - cyrswlrEWTzgFz2TXDBEf0FAb1l-VxKhkJrZ5q24I_g649G7KVjSXg==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Mon, 23 Oct 2023 20:15:50 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=<THEMOVIEDB_API_KEY>&query=The%20Dark%20Knight
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.7.11
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Mon, 23 Oct 2023 20:15:50 GMT
      Server:
      - openresty
      Cache-Control:
      - public, max-age=25283
      X-Memc:
      - HIT
      X-Memc-Key:
      - 85f008d84bd4b330517d09695b99310e
      X-Memc-Age:
      - '5482'
      X-Memc-Expires:
      - '18041'
      Etag:
      - W/"45e89f80ef046031b97accbaaf6e879f"
      Vary:
      - Accept-Encoding
      - Origin
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 83a84568820d835ad60fa1c2aba27de2.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - SFO53-P4
      Alt-Svc:
      - h3=":443"; ma=86400
      X-Amz-Cf-Id:
      - bT0P3jcF1hEGbe54haPpKouEi50P9U0BsSFVIS-juCaX2vI7vrgXcQ==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Mon, 23 Oct 2023 20:15:50 GMT
recorded_with: VCR 6.2.0
